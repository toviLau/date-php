/**
 * date-php.js v1.2.5
 *   这是一个Javascript版的仿PHP日期时间格式化函数，使用方法和PHP语言一样，有丰富的模板字符串，转换日期时间更自由。 repository https://github.com/toviLau/date-php.git
 *   (c) 2019 ToviLau. Released under the MIT License. 
 **/
!function(n,e){'object'==typeof exports&&'undefined'!=typeof module?module.exports=e():'function'==typeof define&&define.amd?define(e):(n=n||self).date=e()}(this,function(){'use strict';function n(n,r){if(void 0===n&&(n='Y-m-d'),void 0===r&&(r=new Date),n=n||'Y-m-d',!new Date(r-0).getTime()&&!new Date(r).getTime())throw Error('参数2不正确，须传入 “日期时间对象”。\n可以参考以下值：\n    "'+(e=new Date)+'"\n    "'+e.toUTCString()+'"\n    '+e.getTime()+'\n');var e;function u(n,e,t){return void 0===t&&(t='0'),(n+='').length<e?new Array(++e-n.length).join(t)+n:n}r=this||(isNaN(r-0)?new Date(r):new Date(r-0));var t=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],i={1:'st',2:'nd',3:'rd',21:'st',22:'nd',23:'rd',31:'st'},o=['','January','February','March','April','May','June','July','August','September','October','November','December'],a={d:function(){return u(a.j(),2)},D:function(){return a.l().substr(0,3)},j:function(){return r.getDate()},l:function(){return t[a.w()]},N:function(){return 0===a.w()?7:a.w()},S:function(){return i[a.j()]?i[a.j()]:'th'},w:function(){return r.getDay()},z:function(){return Math.ceil((r-new Date(a.Y()+'/1/1'))/864e5)},W:function(){var n=(a.w()+6)%7;r.setDate(a.j()-n+3);var e=r.valueOf();r.setMonth(0,1),4!==a.w()&&r.setMonth(0,1+(4-a.w()+7)%7);var t=1+Math.ceil((e-r)/6048e5);return u(t,2)},F:function(){return o[a.n()]},m:function(){return u(a.n(),2)},M:function(){return a.F().substr(0,3)},n:function(){return r.getMonth()+1},t:function(){var n=a.Y(),e=a.n();return 12===e&&(n+=1,e=0),new Date(n,e,0).getDate()},L:function(){return Number(a.Y()%400==0||a.Y()%100!=0&&a.Y()%4==0)},o:function(){return r.setDate(a.j()-(a.w()+6)%7+3),a.Y()},Y:function(){return r.getFullYear()},y:function(){return(a.Y()+'').slice(2)},a:function(){return 11<a.G()?'pm':'am'},A:function(){return a.a().toUpperCase()},B:function(){var n=60*(r.getTimezoneOffset()+60),e=3600*a.G()+60*r.getMinutes()+r.getSeconds()+n,t=Math.floor(e/86.4);return 1e3<t&&(t-=1e3),t<0&&(t+=1e3),1===String(t).length&&(t='00'+t),2===String(t).length&&(t='0'+t),t},g:function(){return a.G()%12||12},G:function(){return r.getHours()},h:function(){return u(a.g(),2)},H:function(){return u(a.G(),2)},i:function(){return u(r.getMinutes(),2)},s:function(){return u(r.getSeconds(),2)},u:function(){return(r.getTime()+'').substr(-3)},e:function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},I:function(){for(var n=null,e=0;e<12;++e){var t=new Date(a.Y(),e,1).getTimezoneOffset();if(null===n)n=t;else{if(t<n){n=t;break}if(n<t)break}}return r.getTimezoneOffset()===n|0},O:function(){return(0<r.getTimezoneOffset()?'-':'+')+u(Math.abs(r.getTimezoneOffset()/60*100),4)},P:function(){return a.O().match(/[+-]?\d{2}/g).join(':')},T:function(){var n=r.toLocaleTimeString(navigator.language,{timeZoneName:'short'}).split(/\s/);return n[n.length-1]},Z:function(){return-60*r.getTimezoneOffset()},c:function(){return a.Y()+'-'+a.m()+'-'+a.d()+'T'+a.h()+':'+a.i()+':'+a.s()+a.P()},r:function(){return r.toString()},U:function(){return Math.round(r.getTime()/1e3)}};return n.replace(/([a-z])/gi,function(n,e){return n!==e?e:a[e]?a[e]():e})}return n.version='1.2.5',Date.prototype.format=n,Object.defineProperty(n,'description',{get:function(){console.info('%cdate-php使用说明\n方式1：date(["格式化字符串"[, 时间对象]])\n方式2：时间对象.format(["格式化字符串"])\n  所有方式的入参都是可选参数  格式化字符串：\n    日\n      d: 月份中的第几天，有前导零的2位数字。从"01"到"31"\n      D: 星期中的第几天，文本表示，3个字母。从"Mon"到"Sun"\n      j: 月份中的第几天，没有前导零。"1"到"31"\n      l: 星期几，完整的文本格式。"Sunday"到"Saturday"\n      N: ISO-8601格式的星期中的第几天。"1"(表示星期一)到"7"(表示星期天)\n      S: 每月天数后面的英文后缀，2 个字符 st/nd/rd/th。\n      w: 星期中的第几天，数字表示。"0"(表示星期天)到"6"(表示星期六)\n      z: 年份中的第几天。"0"到"365"\n    星期\n      W: 年份中的第几周\n    月\n      F: 月份，完整的文本格式。从"January"到"December"\n      m: 数字表示的月份，有前导零。"01"到"12"\n      M: 三个字母缩写表示的月份。从"Jan"到"Dec"\n      n: 数字表示的月份，没有前导零。"1"到"12"\n      t: 给定月份所应有的天数。 "28"到"31"\n    年\n      L: 是否为闰年。1:是，0:否\n      o: ISO-8601格式年份数字。这和 Y 的值类似，星期数（W）属于前一年或下一年，则用那一年。\n      Y: 4 位数字完整表示的年份\n      y: 2 位数字表示的年份\n    时间\n      a: 小写的上午和下午值。"am"或"pm"\n      A: 大写的上午和下午值。"AM"或"PM"\n      B: Swatch Internet 标准时。"000"到"999"\n      g: 12 小时格式，没有前导零。"1"到"12"\n      G: 24 小时格式，没有前导零。"0"到"23"\n      h: 12 小时格式，有前导零。"01"到"12"\n      H: 24 小时格式，有前导零。"00"到"23"\n      i: 有前导零的分钟数。"00"到"59"\n      s: 有前导零的秒数。"00"到"59"\n      u: 有前导零的毫秒。"000"到"999"\n    时区\n      e: 时区标识。UTC，GMT，Atlantic/Azores\n      I: 是否为夏令时。1:是，0:否\n      O: 与格林威治时间相差的小时数。例如：+0200\n      P: 与格林威治时间的差别，小时和分钟之间有冒号分隔。例如：+02:00\n      T: 本机所在的时区。例如：EST，MDT。\n      Z: 时差偏移量的秒数。UTC 西边的时区偏移量总是负的，UTC 东边的时区偏移量总是正的。-43200 到 43200\n    完整的日期／时间\n      c: ISO 8601 格式的日期。例如：2004-02-12T15:19:21+00:00\n      r: RFC 822 格式的日期。例如：Thu, 21 Dec 2000 16:01:07 +0200\n      U: 从 Unix 纪元开始至今的秒数(Unix时间戳)。\n\nDemo:\n    date(\'Y-m-d H:i:s.u A w\', new Date())\n    输出：'+n('Y-m-d H:i:s.u A D',new Date)+'\n\n    date(\'Y-m-d H:i:s\', '+(new Date).getTime()+')\n    输出：'+n('Y-m-d H:i:s',(new Date).getTime())+'\n','background:#cff;color:#36f')}}),n});
